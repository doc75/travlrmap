{"name":"Travlrmap","tagline":"Sinatra based travels map","body":"What?\r\n=====\r\n\r\nA web application that can be used to show where you have traveled to - or any\r\nother locations really.  It's not a check-in style app more a means of tracking\r\ncity or attraction level places you're been to.\r\n\r\nIt's not social, does not have a database or app to check-in with, you maintain\r\ndata files in YAML that gets rendered on a map.\r\n\r\n```\r\n---\r\n:points:\r\n- :type: :visit\r\n  :lon: -73.961334\r\n  :title: New York\r\n  :lat: 40.784506\r\n  :country: United States\r\n  :comment: Sample Data\r\n  :href: http://en.wikipedia.org/wiki/New_York\r\n  :linktext: Wikipedia\r\n- :type: :visit\r\n  :lon: -71.046524\r\n  :title: Boston\r\n  :lat: 42.363871\r\n  :country: United States\r\n  :comment: Sample Data\r\n  :href: http://en.wikipedia.org/wiki/Boston\r\n  :linkimg: https://pbs.twimg.com/profile_images/430836891198320640/_-25bnPr.jpeg\r\n```\r\n\r\nHere you can see 2 places being defined including links, images and so forth.  A\r\nvisual helper tool is provided to make these YAML points.\r\n\r\nIt's not done, you can see it in action on my own site: http://travels.devco.net\r\n\r\nSetup?\r\n------\r\n\r\nThe app is distributed as a [rubygem](https://rubygems.org/gems/travlrmap) and runs\r\ninside a ruby app server.\r\n\r\nThere is a demo of a fully working setup that runs on Heroku, it's on github and\r\ncan be seen [here](https://github.com/ripienaar/travlrmap-demo).\r\n\r\nYou only need to copy the *Gemfile* and *config.ru* files from there into a new\r\ndirectory.  Create *config* and *images* directories and copy the sample config\r\nfiles into the config directory removing the *.dist* extension.\r\n\r\nYou need to have bundler installed, a heroku account and the heroku toolkit\r\ninstalled.\r\n\r\n```\r\n$ heroku create\r\nCreating polar-harbor-2295... done, stack is cedar-14\r\nhttps://polar-harbor-2295.herokuapp.com/ | https://git.heroku.com/polar-harbor-2295.git\r\nGit remote heroku added\r\n```\r\n\r\nTake a note of the URL this shows.  Edit the *travlrmap.yaml* and fix the paths\r\nfor the types of visit.\r\n\r\nNow create the *Gemfile.lock*\r\n\r\n```\r\n$ bundle update\r\n.\r\n.\r\nYour bundle is updated! Use `bundle show [gemname]` to see where a bundled gem is installed.\r\n```\r\n\r\nCheck in everything into git and do ```git push heroku master``` when it's one your\r\napp should be up and running and accessible.\r\n\r\nCommit your files to your own git repo and start adding points, access ```/geocode```\r\nfor a visual tool to assist in making point YAML.\r\n\r\nAdding points?\r\n--------------\r\n\r\nAs of version 0.0.15 there's a visual helper to help you make points, you can access this\r\nat ```/geocode```, search for a place and the map will jump to it and drop a marker.  The\r\nform will pre-fill what it can, fill in the rest and hit preview.\r\n\r\nYou'll see your point and the YAML to save.  You can also click arbitrary places using the\r\nright mouse button.\r\n\r\nIn future we might support saving points to a YAML file if you want.\r\n\r\nConfig Reference?\r\n-----------------\r\n\r\nA sample config file can be seen in *config/travlrmap.yaml.dist*, it shows all\r\npossible configuration options and samples of each:\r\n\r\n### :map: Section\r\n\r\nBasic overvall settings controlling data sources and the look of the site\r\n\r\n#### :data:\r\nWhere to load data from.\r\n\r\nData can be stored in one or multiple files, just list your yaml files in an array\r\nhere\r\n\r\n#### :width:\r\nMap width.  The map gets rendered into a div on the page, this controls how much of\r\nthat div is taken up by the map, as the div is 100% wide this is a good way to\r\nkeep some relative sized whitespace around.\r\n\r\n#### :height:\r\nMap height.  As above for :width:\r\n\r\n#### :zoom_control:, :map_type_control:, :street_view_control:, :overview_control:, :pan_control:\r\nThese settings enable and disable parts of the Google maps UI\r\n\r\n#### :title:\r\nThe title to show top of the page\r\n\r\n#### :cluster:\r\nSet this to true to enable clustering of points, especially useful if you have many many points\r\n\r\n#### :cluster_grid_size:\r\nThe size of a grid that gets clustered by the clustering library, adjust this if you find that too\r\nare being combined on the map\r\n\r\n#### :cluster_minumum_size:\r\nA specific grid of the cluster must have at least this many items before its clustered, defaults to 2\r\n\r\n#### :cluster_zoom_on_click:\r\nSet to false to disable the behavior where a cluster click zooms the map to expand all the items in it\r\n\r\n#### :cluster_image_path:, :cluster_image_extension:, :cluster_image_sizes:\r\nYou can customize the cluster images being used and a number has been provided in the basic HTML colors.\r\n\r\nThe urls being loaded are in the form ```:cluster_image_path:N.:cluster_image_extension:``` where ```N``` is a number from 1 to 5.\r\n\r\nThese images have to be square sized and if you tweak the sizes you should specify the sizes for image 1 to 5 in the array :cluster_image_sizes: as here.\r\n\r\n#### :show_geocode_link:\r\nBy default a ```geocode``` link is shown in the navbar that takes the user to a page allowing them to make\r\na new point, this can be disabled using this option\r\n\r\n#### :google_analytics_id:\r\nIf you'd like to track visits to your site using Google Analytics fill in your ID like ```UA-99999999-9``` here\r\n\r\n### :views: Section\r\n\r\nCustom views to show pre-decided parts of your map.  You should configure at least\r\none called *:default:*, the one in the sample data shows the world\r\n\r\nAll settings as per the sample is required.  You can get the lon/lat/zoom by simply\r\nbrowsing to google maps and looking at the URL.\r\n\r\n### :types: Section\r\n\r\nThis defines type of visit, you can reference these later when creating points.\r\n\r\nThe sample data sets up 3 types.\r\n\r\nA number of markers are included already for you to use, you can see them [here](https://github.com/ripienaar/travlrmap/tree/master/public/markers).\r\nA handy service for creating custom ones on demand can be found at http://www.googlemapsmarkers.com/\r\n\r\nAuthentication?\r\n---------------\r\n\r\nYou can enable authentication on the ```/geocode``` url and the REST endpoing used to\r\nencode points, you have to set 4 config items in the configuration file in the map section.\r\n\r\nNot much point to this today but in future I'll enable saving of data and authentication\r\nwill be needed then.\r\n\r\n````\r\n  :authenticate: true\r\n  :admin_user: admin\r\n  :admin_salt: a929d3a47ee0c151fcf2cfde9efabf605bb0f999c672cf5bd0816c303fd6f778\r\n  :admin_hash: 156166b575d6074b82f7f6c8453b81b8\r\n````\r\n\r\nTo calculate a salt run the following command, salts must be at least 16 chanracters:\r\n\r\n````\r\n$ openssl rand 32 -hex\r\na929d3a47ee0c151fcf2cfde9efabf605bb0f999c672cf5bd0816c303fd6f778\r\n````\r\n\r\nGiven the salt you can calculate your password hash by concatenating your password and\r\ncalculating the md5 of the combination:\r\n\r\n````\r\n$ echo -n a929d3a47ee0c151fcf2cfde9efabf605bb0f999c672cf5bd0816c303fd6f778password | md5sum\r\n156166b575d6074b82f7f6c8453b81b8\r\n````\r\n\r\n*NOTE: The values shown above is wrong on purpose, make your own correct ones*\r\n\r\nContact?\r\n--------\r\n\r\nR.I.Pienaar / rip@devco.net / @ripienaar / http://devco.net/\r\n","google":"UA-10152852-2","note":"Don't delete this file! It's used internally to help with page regeneration."}